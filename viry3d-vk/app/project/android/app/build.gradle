apply plugin: 'com.android.application'

def ndkDir
if (project.rootProject.file('local.properties').exists()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    ndkDir = properties.getProperty('ndk.dir')
}
if (!ndkDir) {
    ndkDir = System.getenv("ANDROID_NDK_HOME")
}
if(!ndkDir || ndkDir.empty) {
    throw new GradleException('Environment Variable ANDROID_NDK_HOME for NDK path need to be setup')
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.1"

    defaultConfig {
        applicationId "com.viry3d.app"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters 'armeabi-v7a'
        }

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-18', '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=c++_shared'
            }
        }
    }

    //ndk-bundle\sources\third_party\shaderc
    //..\..\..\ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk APP_STL:=c++_shared APP_ABI=armeabi-v7a APP_PLATFORM=android-18 libshaderc_combined

    externalNativeBuild {
        cmake {
            path '../CMakeLists.txt'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

/*
    exec {
        workingDir '../../../..'
        def cmd = [
            'python', 'copy_assets.py'
        ]
        commandLine cmd
    }
*/

    // for vulkan validation layer libs
    sourceSets {
        main {
            jniLibs {
                srcDir "${ndkDir}/sources/third_party/vulkan/src/build-android/jniLibs"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
